// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.proto

#include "Common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace TW {
namespace Common {
namespace Proto {
}  // namespace Proto
}  // namespace Common
}  // namespace TW
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_Common_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Common_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Common_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Common_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_Common_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014Common.proto\022\017TW.Common.Proto*\373\004\n\014Sign"
  "ingError\022\006\n\002OK\020\000\022\021\n\rError_general\020\001\022\022\n\016E"
  "rror_internal\020\002\022\025\n\021Error_low_balance\020\003\022\037"
  "\n\033Error_zero_amount_requested\020\004\022\035\n\031Error"
  "_missing_private_key\020\005\022\035\n\031Error_invalid_"
  "private_key\020\017\022\031\n\025Error_invalid_address\020\020"
  "\022\026\n\022Error_invalid_utxo\020\021\022\035\n\031Error_invali"
  "d_utxo_amount\020\022\022\023\n\017Error_wrong_fee\020\006\022\021\n\r"
  "Error_signing\020\007\022\024\n\020Error_tx_too_big\020\010\022\035\n"
  "\031Error_missing_input_utxos\020\t\022\032\n\026Error_no"
  "t_enough_utxos\020\n\022\027\n\023Error_script_redeem\020"
  "\013\022\027\n\023Error_script_output\020\014\022 \n\034Error_scri"
  "pt_witness_program\020\r\022\026\n\022Error_invalid_me"
  "mo\020\016\022\025\n\021Error_input_parse\020\023\022\030\n\024Error_no_"
  "support_n2n\020\024\022\032\n\026Error_signatures_count\020"
  "\025\022\030\n\024Error_invalid_params\020\026\022(\n$Error_inv"
  "alid_requested_token_amount\020\027B\027\n\025wallet."
  "core.jni.protob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Common_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Common_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Common_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Common_2eproto = {
  false, false, descriptor_table_protodef_Common_2eproto, "Common.proto", 702,
  &descriptor_table_Common_2eproto_once, descriptor_table_Common_2eproto_sccs, descriptor_table_Common_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_Common_2eproto::offsets,
  file_level_metadata_Common_2eproto, 0, file_level_enum_descriptors_Common_2eproto, file_level_service_descriptors_Common_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Common_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Common_2eproto)), true);
namespace TW {
namespace Common {
namespace Proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SigningError_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Common_2eproto);
  return file_level_enum_descriptors_Common_2eproto[0];
}
bool SigningError_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Proto
}  // namespace Common
}  // namespace TW
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
