// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmwasm_wasm_v1_tx.proto

#include "cosmwasm_wasm_v1_tx.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_coin_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Coin_coin_2eproto;
namespace cosmwasm {
namespace wasm {
namespace v1 {
class MsgExecuteContractDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgExecuteContract> _instance;
} _MsgExecuteContract_default_instance_;
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
static void InitDefaultsscc_info_MsgExecuteContract_cosmwasm_5fwasm_5fv1_5ftx_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cosmwasm::wasm::v1::_MsgExecuteContract_default_instance_;
    new (ptr) ::cosmwasm::wasm::v1::MsgExecuteContract();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MsgExecuteContract_cosmwasm_5fwasm_5fv1_5ftx_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MsgExecuteContract_cosmwasm_5fwasm_5fv1_5ftx_2eproto}, {
      &scc_info_Coin_coin_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cosmwasm_5fwasm_5fv1_5ftx_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_cosmwasm_5fwasm_5fv1_5ftx_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cosmwasm_5fwasm_5fv1_5ftx_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cosmwasm_5fwasm_5fv1_5ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MsgExecuteContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MsgExecuteContract, sender_),
  PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MsgExecuteContract, contract_),
  PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MsgExecuteContract, msg_),
  PROTOBUF_FIELD_OFFSET(::cosmwasm::wasm::v1::MsgExecuteContract, funds_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cosmwasm::wasm::v1::MsgExecuteContract)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmwasm::wasm::v1::_MsgExecuteContract_default_instance_),
};

const char descriptor_table_protodef_cosmwasm_5fwasm_5fv1_5ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031cosmwasm_wasm_v1_tx.proto\022\020cosmwasm.wa"
  "sm.v1\032\ncoin.proto\"m\n\022MsgExecuteContract\022"
  "\016\n\006sender\030\001 \001(\t\022\020\n\010contract\030\002 \001(\t\022\013\n\003msg"
  "\030\003 \001(\014\022(\n\005funds\030\005 \003(\0132\031.cosmos.base.v1be"
  "ta1.Coinb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cosmwasm_5fwasm_5fv1_5ftx_2eproto_deps[1] = {
  &::descriptor_table_coin_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_cosmwasm_5fwasm_5fv1_5ftx_2eproto_sccs[1] = {
  &scc_info_MsgExecuteContract_cosmwasm_5fwasm_5fv1_5ftx_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cosmwasm_5fwasm_5fv1_5ftx_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cosmwasm_5fwasm_5fv1_5ftx_2eproto = {
  false, false, descriptor_table_protodef_cosmwasm_5fwasm_5fv1_5ftx_2eproto, "cosmwasm_wasm_v1_tx.proto", 176,
  &descriptor_table_cosmwasm_5fwasm_5fv1_5ftx_2eproto_once, descriptor_table_cosmwasm_5fwasm_5fv1_5ftx_2eproto_sccs, descriptor_table_cosmwasm_5fwasm_5fv1_5ftx_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_cosmwasm_5fwasm_5fv1_5ftx_2eproto::offsets,
  file_level_metadata_cosmwasm_5fwasm_5fv1_5ftx_2eproto, 1, file_level_enum_descriptors_cosmwasm_5fwasm_5fv1_5ftx_2eproto, file_level_service_descriptors_cosmwasm_5fwasm_5fv1_5ftx_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_cosmwasm_5fwasm_5fv1_5ftx_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_cosmwasm_5fwasm_5fv1_5ftx_2eproto)), true);
namespace cosmwasm {
namespace wasm {
namespace v1 {

// ===================================================================

class MsgExecuteContract::_Internal {
 public:
};

void MsgExecuteContract::clear_funds() {
  funds_.Clear();
}
MsgExecuteContract::MsgExecuteContract(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  funds_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmwasm.wasm.v1.MsgExecuteContract)
}
MsgExecuteContract::MsgExecuteContract(const MsgExecuteContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      funds_(from.funds_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sender().empty()) {
    sender_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender(), 
      GetArena());
  }
  contract_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_contract().empty()) {
    contract_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract(), 
      GetArena());
  }
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:cosmwasm.wasm.v1.MsgExecuteContract)
}

void MsgExecuteContract::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MsgExecuteContract_cosmwasm_5fwasm_5fv1_5ftx_2eproto.base);
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MsgExecuteContract::~MsgExecuteContract() {
  // @@protoc_insertion_point(destructor:cosmwasm.wasm.v1.MsgExecuteContract)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgExecuteContract::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MsgExecuteContract::ArenaDtor(void* object) {
  MsgExecuteContract* _this = reinterpret_cast< MsgExecuteContract* >(object);
  (void)_this;
}
void MsgExecuteContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgExecuteContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgExecuteContract& MsgExecuteContract::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgExecuteContract_cosmwasm_5fwasm_5fv1_5ftx_2eproto.base);
  return *internal_default_instance();
}


void MsgExecuteContract::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmwasm.wasm.v1.MsgExecuteContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  funds_.Clear();
  sender_.ClearToEmpty();
  contract_.ClearToEmpty();
  msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgExecuteContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string sender = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmwasm.wasm.v1.MsgExecuteContract.sender"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_contract();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmwasm.wasm.v1.MsgExecuteContract.contract"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .cosmos.base.v1beta1.Coin funds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_funds(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgExecuteContract::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmwasm.wasm.v1.MsgExecuteContract)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1;
  if (this->sender().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmwasm.wasm.v1.MsgExecuteContract.sender");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender(), target);
  }

  // string contract = 2;
  if (this->contract().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract().data(), static_cast<int>(this->_internal_contract().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmwasm.wasm.v1.MsgExecuteContract.contract");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract(), target);
  }

  // bytes msg = 3;
  if (this->msg().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_msg(), target);
  }

  // repeated .cosmos.base.v1beta1.Coin funds = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_funds_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_funds(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmwasm.wasm.v1.MsgExecuteContract)
  return target;
}

size_t MsgExecuteContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmwasm.wasm.v1.MsgExecuteContract)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin funds = 5;
  total_size += 1UL * this->_internal_funds_size();
  for (const auto& msg : this->funds_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string sender = 1;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // string contract = 2;
  if (this->contract().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract());
  }

  // bytes msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_msg());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgExecuteContract::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cosmwasm.wasm.v1.MsgExecuteContract)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgExecuteContract* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgExecuteContract>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cosmwasm.wasm.v1.MsgExecuteContract)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cosmwasm.wasm.v1.MsgExecuteContract)
    MergeFrom(*source);
  }
}

void MsgExecuteContract::MergeFrom(const MsgExecuteContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmwasm.wasm.v1.MsgExecuteContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  funds_.MergeFrom(from.funds_);
  if (from.sender().size() > 0) {
    _internal_set_sender(from._internal_sender());
  }
  if (from.contract().size() > 0) {
    _internal_set_contract(from._internal_contract());
  }
  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
}

void MsgExecuteContract::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cosmwasm.wasm.v1.MsgExecuteContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgExecuteContract::CopyFrom(const MsgExecuteContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmwasm.wasm.v1.MsgExecuteContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExecuteContract::IsInitialized() const {
  return true;
}

void MsgExecuteContract::InternalSwap(MsgExecuteContract* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  funds_.InternalSwap(&other->funds_);
  sender_.Swap(&other->sender_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  contract_.Swap(&other->contract_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgExecuteContract::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wasm
}  // namespace cosmwasm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmwasm::wasm::v1::MsgExecuteContract* Arena::CreateMaybeMessage< ::cosmwasm::wasm::v1::MsgExecuteContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmwasm::wasm::v1::MsgExecuteContract >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
