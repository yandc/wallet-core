// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authz_tx.proto

#include "authz_tx.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_authz_5ftx_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Grant_authz_5ftx_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace cosmos {
namespace authz {
namespace v1beta1 {
class GrantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Grant> _instance;
} _Grant_default_instance_;
class MsgGrantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgGrant> _instance;
} _MsgGrant_default_instance_;
class MsgRevokeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MsgRevoke> _instance;
} _MsgRevoke_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
static void InitDefaultsscc_info_Grant_authz_5ftx_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cosmos::authz::v1beta1::_Grant_default_instance_;
    new (ptr) ::cosmos::authz::v1beta1::Grant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Grant_authz_5ftx_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Grant_authz_5ftx_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_MsgGrant_authz_5ftx_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cosmos::authz::v1beta1::_MsgGrant_default_instance_;
    new (ptr) ::cosmos::authz::v1beta1::MsgGrant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MsgGrant_authz_5ftx_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MsgGrant_authz_5ftx_2eproto}, {
      &scc_info_Grant_authz_5ftx_2eproto.base,}};

static void InitDefaultsscc_info_MsgRevoke_authz_5ftx_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cosmos::authz::v1beta1::_MsgRevoke_default_instance_;
    new (ptr) ::cosmos::authz::v1beta1::MsgRevoke();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MsgRevoke_authz_5ftx_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MsgRevoke_authz_5ftx_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_authz_5ftx_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_authz_5ftx_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_authz_5ftx_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_authz_5ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, authorization_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, expiration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgGrant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgGrant, granter_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgGrant, grantee_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgGrant, grant_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgRevoke, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgRevoke, granter_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgRevoke, grantee_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgRevoke, msg_type_url_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cosmos::authz::v1beta1::Grant)},
  { 7, -1, sizeof(::cosmos::authz::v1beta1::MsgGrant)},
  { 15, -1, sizeof(::cosmos::authz::v1beta1::MsgRevoke)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::authz::v1beta1::_Grant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::authz::v1beta1::_MsgGrant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::authz::v1beta1::_MsgRevoke_default_instance_),
};

const char descriptor_table_protodef_authz_5ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016authz_tx.proto\022\024cosmos.authz.v1beta1\032\031"
  "google/protobuf/any.proto\032\037google/protob"
  "uf/timestamp.proto\"d\n\005Grant\022+\n\rauthoriza"
  "tion\030\001 \001(\0132\024.google.protobuf.Any\022.\n\nexpi"
  "ration\030\002 \001(\0132\032.google.protobuf.Timestamp"
  "\"X\n\010MsgGrant\022\017\n\007granter\030\001 \001(\t\022\017\n\007grantee"
  "\030\002 \001(\t\022*\n\005grant\030\003 \001(\0132\033.cosmos.authz.v1b"
  "eta1.Grant\"C\n\tMsgRevoke\022\017\n\007granter\030\001 \001(\t"
  "\022\017\n\007grantee\030\002 \001(\t\022\024\n\014msg_type_url\030\003 \001(\tb"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_authz_5ftx_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_authz_5ftx_2eproto_sccs[3] = {
  &scc_info_Grant_authz_5ftx_2eproto.base,
  &scc_info_MsgGrant_authz_5ftx_2eproto.base,
  &scc_info_MsgRevoke_authz_5ftx_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_authz_5ftx_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_authz_5ftx_2eproto = {
  false, false, descriptor_table_protodef_authz_5ftx_2eproto, "authz_tx.proto", 367,
  &descriptor_table_authz_5ftx_2eproto_once, descriptor_table_authz_5ftx_2eproto_sccs, descriptor_table_authz_5ftx_2eproto_deps, 3, 2,
  schemas, file_default_instances, TableStruct_authz_5ftx_2eproto::offsets,
  file_level_metadata_authz_5ftx_2eproto, 3, file_level_enum_descriptors_authz_5ftx_2eproto, file_level_service_descriptors_authz_5ftx_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_authz_5ftx_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_authz_5ftx_2eproto)), true);
namespace cosmos {
namespace authz {
namespace v1beta1 {

// ===================================================================

class Grant::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& authorization(const Grant* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& expiration(const Grant* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
Grant::_Internal::authorization(const Grant* msg) {
  return *msg->authorization_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
Grant::_Internal::expiration(const Grant* msg) {
  return *msg->expiration_;
}
void Grant::clear_authorization() {
  if (GetArena() == nullptr && authorization_ != nullptr) {
    delete authorization_;
  }
  authorization_ = nullptr;
}
void Grant::clear_expiration() {
  if (GetArena() == nullptr && expiration_ != nullptr) {
    delete expiration_;
  }
  expiration_ = nullptr;
}
Grant::Grant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.Grant)
}
Grant::Grant(const Grant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authorization()) {
    authorization_ = new PROTOBUF_NAMESPACE_ID::Any(*from.authorization_);
  } else {
    authorization_ = nullptr;
  }
  if (from._internal_has_expiration()) {
    expiration_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.expiration_);
  } else {
    expiration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.Grant)
}

void Grant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Grant_authz_5ftx_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&authorization_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&expiration_) -
      reinterpret_cast<char*>(&authorization_)) + sizeof(expiration_));
}

Grant::~Grant() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.Grant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Grant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete authorization_;
  if (this != internal_default_instance()) delete expiration_;
}

void Grant::ArenaDtor(void* object) {
  Grant* _this = reinterpret_cast< Grant* >(object);
  (void)_this;
}
void Grant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Grant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Grant& Grant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Grant_authz_5ftx_2eproto.base);
  return *internal_default_instance();
}


void Grant::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.Grant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && authorization_ != nullptr) {
    delete authorization_;
  }
  authorization_ = nullptr;
  if (GetArena() == nullptr && expiration_ != nullptr) {
    delete expiration_;
  }
  expiration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any authorization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expiration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Grant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.Grant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any authorization = 1;
  if (this->has_authorization()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::authorization(this), target, stream);
  }

  // .google.protobuf.Timestamp expiration = 2;
  if (this->has_expiration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::expiration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.Grant)
  return target;
}

size_t Grant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.Grant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any authorization = 1;
  if (this->has_authorization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authorization_);
  }

  // .google.protobuf.Timestamp expiration = 2;
  if (this->has_expiration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expiration_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Grant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cosmos.authz.v1beta1.Grant)
  GOOGLE_DCHECK_NE(&from, this);
  const Grant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Grant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cosmos.authz.v1beta1.Grant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cosmos.authz.v1beta1.Grant)
    MergeFrom(*source);
  }
}

void Grant::MergeFrom(const Grant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.Grant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_authorization()) {
    _internal_mutable_authorization()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_authorization());
  }
  if (from.has_expiration()) {
    _internal_mutable_expiration()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_expiration());
  }
}

void Grant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cosmos.authz.v1beta1.Grant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Grant::CopyFrom(const Grant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.Grant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grant::IsInitialized() const {
  return true;
}

void Grant::InternalSwap(Grant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grant, expiration_)
      + sizeof(Grant::expiration_)
      - PROTOBUF_FIELD_OFFSET(Grant, authorization_)>(
          reinterpret_cast<char*>(&authorization_),
          reinterpret_cast<char*>(&other->authorization_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgGrant::_Internal {
 public:
  static const ::cosmos::authz::v1beta1::Grant& grant(const MsgGrant* msg);
};

const ::cosmos::authz::v1beta1::Grant&
MsgGrant::_Internal::grant(const MsgGrant* msg) {
  return *msg->grant_;
}
MsgGrant::MsgGrant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.MsgGrant)
}
MsgGrant::MsgGrant(const MsgGrant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_granter().empty()) {
    granter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_granter(), 
      GetArena());
  }
  grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_grantee().empty()) {
    grantee_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_grantee(), 
      GetArena());
  }
  if (from._internal_has_grant()) {
    grant_ = new ::cosmos::authz::v1beta1::Grant(*from.grant_);
  } else {
    grant_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.MsgGrant)
}

void MsgGrant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MsgGrant_authz_5ftx_2eproto.base);
  granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grant_ = nullptr;
}

MsgGrant::~MsgGrant() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.MsgGrant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgGrant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  granter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grantee_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete grant_;
}

void MsgGrant::ArenaDtor(void* object) {
  MsgGrant* _this = reinterpret_cast< MsgGrant* >(object);
  (void)_this;
}
void MsgGrant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgGrant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgGrant& MsgGrant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgGrant_authz_5ftx_2eproto.base);
  return *internal_default_instance();
}


void MsgGrant::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.MsgGrant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granter_.ClearToEmpty();
  grantee_.ClearToEmpty();
  if (GetArena() == nullptr && grant_ != nullptr) {
    delete grant_;
  }
  grant_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgGrant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string granter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgGrant.granter"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string grantee = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgGrant.grantee"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .cosmos.authz.v1beta1.Grant grant = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_grant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgGrant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.MsgGrant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1;
  if (this->granter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_granter().data(), static_cast<int>(this->_internal_granter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgGrant.granter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_granter(), target);
  }

  // string grantee = 2;
  if (this->grantee().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_grantee().data(), static_cast<int>(this->_internal_grantee().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgGrant.grantee");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_grantee(), target);
  }

  // .cosmos.authz.v1beta1.Grant grant = 3;
  if (this->has_grant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::grant(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.MsgGrant)
  return target;
}

size_t MsgGrant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.MsgGrant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1;
  if (this->granter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_granter());
  }

  // string grantee = 2;
  if (this->grantee().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_grantee());
  }

  // .cosmos.authz.v1beta1.Grant grant = 3;
  if (this->has_grant()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *grant_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgGrant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cosmos.authz.v1beta1.MsgGrant)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGrant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgGrant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cosmos.authz.v1beta1.MsgGrant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cosmos.authz.v1beta1.MsgGrant)
    MergeFrom(*source);
  }
}

void MsgGrant::MergeFrom(const MsgGrant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.MsgGrant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.granter().size() > 0) {
    _internal_set_granter(from._internal_granter());
  }
  if (from.grantee().size() > 0) {
    _internal_set_grantee(from._internal_grantee());
  }
  if (from.has_grant()) {
    _internal_mutable_grant()->::cosmos::authz::v1beta1::Grant::MergeFrom(from._internal_grant());
  }
}

void MsgGrant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cosmos.authz.v1beta1.MsgGrant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGrant::CopyFrom(const MsgGrant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.MsgGrant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGrant::IsInitialized() const {
  return true;
}

void MsgGrant::InternalSwap(MsgGrant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  granter_.Swap(&other->granter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  grantee_.Swap(&other->grantee_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(grant_, other->grant_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgGrant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MsgRevoke::_Internal {
 public:
};

MsgRevoke::MsgRevoke(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.MsgRevoke)
}
MsgRevoke::MsgRevoke(const MsgRevoke& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_granter().empty()) {
    granter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_granter(), 
      GetArena());
  }
  grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_grantee().empty()) {
    grantee_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_grantee(), 
      GetArena());
  }
  msg_type_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg_type_url().empty()) {
    msg_type_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg_type_url(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.MsgRevoke)
}

void MsgRevoke::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MsgRevoke_authz_5ftx_2eproto.base);
  granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_type_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MsgRevoke::~MsgRevoke() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.MsgRevoke)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MsgRevoke::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  granter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grantee_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_type_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MsgRevoke::ArenaDtor(void* object) {
  MsgRevoke* _this = reinterpret_cast< MsgRevoke* >(object);
  (void)_this;
}
void MsgRevoke::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgRevoke::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MsgRevoke& MsgRevoke::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MsgRevoke_authz_5ftx_2eproto.base);
  return *internal_default_instance();
}


void MsgRevoke::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.MsgRevoke)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granter_.ClearToEmpty();
  grantee_.ClearToEmpty();
  msg_type_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRevoke::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string granter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgRevoke.granter"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string grantee = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgRevoke.grantee"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string msg_type_url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_msg_type_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgRevoke.msg_type_url"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MsgRevoke::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.MsgRevoke)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1;
  if (this->granter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_granter().data(), static_cast<int>(this->_internal_granter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgRevoke.granter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_granter(), target);
  }

  // string grantee = 2;
  if (this->grantee().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_grantee().data(), static_cast<int>(this->_internal_grantee().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgRevoke.grantee");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_grantee(), target);
  }

  // string msg_type_url = 3;
  if (this->msg_type_url().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_type_url().data(), static_cast<int>(this->_internal_msg_type_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgRevoke.msg_type_url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_type_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.MsgRevoke)
  return target;
}

size_t MsgRevoke::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.MsgRevoke)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1;
  if (this->granter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_granter());
  }

  // string grantee = 2;
  if (this->grantee().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_grantee());
  }

  // string msg_type_url = 3;
  if (this->msg_type_url().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_type_url());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgRevoke::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cosmos.authz.v1beta1.MsgRevoke)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRevoke* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MsgRevoke>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cosmos.authz.v1beta1.MsgRevoke)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cosmos.authz.v1beta1.MsgRevoke)
    MergeFrom(*source);
  }
}

void MsgRevoke::MergeFrom(const MsgRevoke& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.MsgRevoke)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.granter().size() > 0) {
    _internal_set_granter(from._internal_granter());
  }
  if (from.grantee().size() > 0) {
    _internal_set_grantee(from._internal_grantee());
  }
  if (from.msg_type_url().size() > 0) {
    _internal_set_msg_type_url(from._internal_msg_type_url());
  }
}

void MsgRevoke::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cosmos.authz.v1beta1.MsgRevoke)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRevoke::CopyFrom(const MsgRevoke& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.MsgRevoke)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRevoke::IsInitialized() const {
  return true;
}

void MsgRevoke::InternalSwap(MsgRevoke* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  granter_.Swap(&other->granter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  grantee_.Swap(&other->grantee_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  msg_type_url_.Swap(&other->msg_type_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRevoke::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::Grant* Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::Grant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::Grant >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::MsgGrant* Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::MsgGrant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::MsgGrant >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::MsgRevoke* Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::MsgRevoke >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::MsgRevoke >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
